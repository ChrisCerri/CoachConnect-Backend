events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80; # Ascolta sulla porta 80 all'interno del container
        server_name localhost; # Può essere il tuo dominio, per sviluppo 'localhost' va bene

        # La root dei file per Nginx è la cartella 'public' di Laravel
        root /var/www/html/public;

        # Intestazioni di sicurezza comuni
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";

        # File di indice che Nginx dovrebbe cercare
        index index.php index.htm index.html; # Aggiunto index.html

        charset utf-8;

        # Gestione delle richieste:
        # Prova a servire il file richiesto ($uri) o la directory ($uri/).
        # Se non trova né l'uno né l'altro, passa la richiesta a index.php (per le rotte di Laravel).
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        # Configurazione per il passaggio delle richieste PHP a PHP-FPM
        location ~ \.php$ {
            # QUI è il punto critico: Nginx e PHP-FPM nello stesso container
            # Usiamo 127.0.0.1:9000 perché PHP-FPM ascolta su questa porta localmente nel container
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            # Imposta il percorso assoluto dello script PHP all'interno del container
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            include fastcgi_params; # Include i parametri FastCGI standard

            # Aggiungi questi parametri per un logging più dettagliato, se necessario
            # fastcgi_split_path_info ^(.+\.php)(/.+)$;
            # fastcgi_param PATH_INFO $fastcgi_path_info;
            # fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
        }

        # Blocco dell'accesso a file sensibili (come il file .env)
        location ~ /\.env {
            deny all;
        }

        # Blocco dell'accesso ai file nascosti di Apache (come .htaccess)
        location ~ /\.ht {
            deny all;
        }

        # Logging degli errori e degli accessi, utile per debug
        error_log /dev/stderr warn; # Invia gli errori allo stream di errore standard (visibile nei log di Render)
        access_log /dev/stdout;    # Invia gli accessi allo stream di output standard (visibile nei log di Render)
    }