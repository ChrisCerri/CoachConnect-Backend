# Il tuo file nginx.conf deve contenere solo il blocco server,
# perché le direttive 'events' e 'http' sono già definite nel file principale di Nginx.

server {
    listen 80; # Ascolta sulla porta 80 all'interno del container
    server_name localhost; # Per sviluppo locale, va bene. Su Render userà il suo dominio.

    # La root dei file per Nginx è la cartella 'public' di Laravel
    root /var/www/html/public;

    # Intestazioni di sicurezza comuni
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # File di indice che Nginx dovrebbe cercare
    index index.php index.htm index.html;

    charset utf-8;

    # Gestione delle richieste:
    # Prova a servire il file richiesto ($uri) o la directory ($uri/).
    # Se non trova né l'uno né l'altro, passa la richiesta a index.php (per le rotte di Laravel).
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Configurazione per il passaggio delle richieste PHP a PHP-FPM
    location ~ \.php$ {
        # Nginx e PHP-FPM nello stesso container
        # Usiamo 127.0.0.1:9000 perché PHP-FPM ascolta su questa porta localmente nel container
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        # Imposta il percorso assoluto dello script PHP all'interno del container
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params; # Include i parametri FastCGI standard
    }

    # Blocco dell'accesso a file sensibili (come il file .env)
    location ~ /\.env {
        deny all;
    }

    # Blocco dell'accesso ai file nascosti di Apache (come .htaccess)
    location ~ /\.ht {
        deny all;
    }

    # Logging degli errori e degli accessi, utile per debug
    # Invia gli errori allo stream di errore standard (visibile nei log di Docker/Render)
    error_log /dev/stderr warn;
    # Invia gli accessi allo stream di output standard (visibile nei log di Docker/Render)
    access_log /dev/stdout;
}